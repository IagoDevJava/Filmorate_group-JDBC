CREATE ALIAS IF NOT EXISTS getDate AS
'java.util.Date getDate() {
    return new java.util.Date();
}';

CREATE TABLE IF NOT EXISTS genre
(
    id   INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name text NOT NULL
);

CREATE TABLE IF NOT EXISTS mpa
(
    id   INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name text NOT NULL
);

CREATE TABLE IF NOT EXISTS OPERATION
(
    ID   INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    NAME CHARACTER VARYING NOT NULL
);

CREATE TABLE IF NOT EXISTS EVENT_TYPE
(
    ID   INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    NAME CHARACTER VARYING NOT NULL
);

CREATE TABLE IF NOT EXISTS users
(
    id       INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    login    text not null,
    name     text,
    email    text,
    birthday date
);

CREATE TABLE IF NOT EXISTS films
(
    id          INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name        text NOT NULL,
    description varchar(200),
    releasedate date NOT NULL,
    duration    int  NOT NULL
);

CREATE TABLE IF NOT EXISTS film_mpa
(
    film_id INTEGER NOT NULL REFERENCES films (id),
    mpa_id  INTEGER NOT NULL REFERENCES mpa (id)
);

CREATE TABLE IF NOT EXISTS film_genre
(
    film_id  INTEGER NOT NULL REFERENCES films (id),
    genre_id INTEGER NOT NULL REFERENCES genre (id)
);

CREATE TABLE IF NOT EXISTS likes
(
    film_id INTEGER NOT NULL REFERENCES films (id),
    user_id INTEGER NOT NULL REFERENCES users (id)
);

CREATE TABLE IF NOT EXISTS friends
(
    user_id   INTEGER NOT NULL REFERENCES users (id),
    friend_id INTEGER NOT NULL REFERENCES users (id)
);

CREATE TABLE IF NOT EXISTS reviews
(
    id           INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    content      text,
    isPositive   boolean,
    user_id      INTEGER NOT NULL REFERENCES users (id),
    film_id      INTEGER NOT NULL REFERENCES films (id),
    creationDate timestamp
);

CREATE TABLE IF NOT EXISTS review_likes
(
    review_id    INTEGER NOT NULL REFERENCES reviews (id),
    user_id      INTEGER NOT NULL REFERENCES users (id),
    useful       INTEGER,
    creationDate timestamp,
    PRIMARY KEY (review_id, user_id)
);

CREATE TABLE IF NOT EXISTS FEED
(
    EVENT_ID    INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    USER_ID     INTEGER           NOT NULL REFERENCES USERS (ID),
    ENTITY_ID   INTEGER           NOT NULL,
    EVENT_TYPE  CHARACTER VARYING NOT NULL,
    OPERATION   CHARACTER VARYING NOT NULL,
    CREATE_TIME LONG
);


